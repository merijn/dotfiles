# Read and set standard paths and environment variables
[[ -f "$HOME/.bash_env" ]] && . "$HOME/.bash_env"

# Interactive bash have 'i' in $-, load .bashrc for interactive scripts. Don't
# run rest of script for non-interactive login shells.
case $- in
    *i*) [[ -f "$HOME/.bashrc" ]] && . "$HOME/.bashrc";;
    *) return 0;;
esac

set_escape() {
    case $TERM in
        cons*)
            local uid
            uid="$(id -u)"
            if [[ $uid -ne 0 ]]; then
                if command -v startx >/dev/null 2>&1; then
                    startx && exit
                fi
            elif command -v tmux >/dev/null 2>&1\
                || command -v screen >/dev/null 2>&1
            then
                while true; do
                    read -rep "Start tmux/screen? (y/n) " ESCAPE

                    case $ESCAPE in
                        [yY])
                            ESCAPE=^Dd
                            return 0
                            ;;
                        [nN])
                            return 0
                            ;;
                        *)
                            ;;
                    esac
                done
            fi
            ;;

        screen*)
            printf "%s\n"\
                "Running a new screen/tmux inside a screen/tmux session. "\
                "Enter an escape sequence for the new session or \"None\" to "\
                "stop starting screen."

            while true; do
                read -rep "Escape sequence (format: ^Dd): " ESCAPE

                if [[ -z "$ESCAPE" ]]; then
                    ESCAPE=^Dd
                    break
                fi

                case $ESCAPE in
                    ^[A-Z][a-z])
                        local trimmed
                        # Internationalisation warnings are useless here
                        # shellcheck disable=SC2018,SC2019
                        trimmed="$(echo "${ESCAPE:2:1}" | tr 'a-z' 'A-Z')"
                        if [[ "${ESCAPE:1:1}" = "$trimmed" ]]; then
                            break
                        fi
                        ;;
                    [Nn][Oo][Nn][Ee])
                        return 1
                        ;;
                    *)
                        ;;
                esac
            done
            ;;

        xterm*)
            ESCAPE=^Dd
            ;;
        *)
            return 1
            ;;
    esac

    export ESCAPE
    return 0
}

if command -v tmux >/dev/null 2>&1; then
    if ! tmux attach >/dev/null 2>&1; then
        if ! set_escape; then
            return 0
        fi
        ESCAPE="$(expr "$ESCAPE" : "\(..\)")"
        tmux new bash && exit
    else
        exit
    fi
elif command -v screen >/dev/null 2>&1; then
    session_check="$(screen -ls | grep -c "\(No Sockets found in\)")"
    if [[ "$session_check" -eq 1 ]]; then
        set_escape
        screen -e "$ESCAPE" && exit
    else
        screen -DRR && exit
    fi
fi
