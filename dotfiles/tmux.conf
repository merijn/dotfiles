# Set version number
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'
# Unbind the default control key binding
unbind C-b
set -g prefix $ESCAPE
bind d send-prefix
bind c new-window -c $HOME

set -g aggressive-resize on

# Set global options
#  Start bash by default in new windows
set -g default-terminal     "screen-256color"
if-shell '[ "$(uname)" = "Darwin" ]' \
    'set -g default-command "reattach-to-user-namespace bash"' \
    'set -g default-command bash'
if-shell '[ "$(uname)" = "Darwin" ]' \
    'set -g default-shell   "/bin/sh"'
if-shell '[ -n "$TMUX_REFRESH_VARS" ]' \
    'set -g update-environment "$TMUX_REFRESH_VARS"'
set -g history-limit        50000
set -g visual-activity      on
set -g visual-bell          off
set -g visual-silence       on
set -g wrap-search          on
set -g escape-time          0                   # Disable ESC-as-Meta delay
set -g display-time         1000                # How long to show messages
set -g set-titles           on      # Set the terminal title
set -g set-titles-string    "#W - #(whoami)@#H:#(pwd)"
set -g mouse                on

# If newer than version 3.0, use new config file with %if directive, else
# fallback to old config file for version 1.8-3.0
if-shell '[ 1 -eq "$(echo "$TMUX_VERSION < 3.0" | bc)" ]' \
    'source-file "$HOME/.tmux.old.conf"' \
    'source-file "$HOME/.tmux.compat.conf"'

#Styles - see backwards compat files

# Set the status bar look
set -g status-keys vi
set -g status-left-length 30
set -g status-left "#[fg=black,bold][#[fg=white]%H:%M#[fg=black]][#[default,fg=magenta]#(echo $ESCAPE)#[fg=black,bold]]["
set -g status-justify centre
set -g status-right-length 17
set -g status-right "#[fg=black,bold]][#[default,fg=yellow]#(sysctl -n vm.loadavg | sed 's/{ //;s/ }//')#[fg=black,bold]]"

# Set window options
setw -g mode-keys vi

# Set copy-mode bindings
bind '}'                  choose-buffer   # Choose buffer to paste from

# Set key bindings
# Useful scripting commands: confirm, command-prompt
bind p      swap-pane -dU
bind ' '    choose-window
bind D      detach
bind K      confirm             kill-pane
bind Q      confirm             kill-server
bind m      setw                monitor-activity
bind M      command-prompt      "set-window monitor-content %%"
bind r      command-prompt      "rename-window %%"
bind !      break-pane -d
# Actual definition below is in backwards compat files
# bind s      split-window
bind S      choose-tree
# Actual definition below is in backwards compat files
# bind v      split-window -h
bind V      command-prompt      "split-window -h '%%'"
bind /      command-prompt      "split-window -dhl 80 'man %%'"

# Repeatable bindings
bind j         select-pane -D
bind h         select-pane -L
bind k         select-pane -U
bind l         select-pane -R
bind -r Left   resize-pane -L
bind -r Right  resize-pane -R
bind -r Up     resize-pane -U
bind -r Down   resize-pane -D
